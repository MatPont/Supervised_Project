all_pred <- c()
index <- c()
data_y <- train_y
data_x <- train_x
for(y in unique(data_y)){
conflict <- TRUE
cpt <- 1
while(conflict){
ind <- which(y == data_y)[cpt]
print(ind)
pred <- tsne$Y[ind,]
temp_pred <- pred[1:2]
if(! is.null(all_pred)){
dist <- apply(all_pred, MARGIN=1, function(x) { sqrt(sum((x - temp_pred)^2)) } )
conflict <- sum(dist < 15) != 0
cpt <- cpt + 1
}else{
conflict <- FALSE
}
}
index <- c(index, ind)
all_pred <- rbind(all_pred, temp_pred)
print(temp_pred)
add.image(pred[1], pred[2], matrix(rev(unlist(data_x[ind,])), nrow=28), image.width = 0.15, col=gray.colors(255))
}
dev.off()
fviz_famd_var(resFAMD, "quanti.var", repel = TRUE, col.var = "black")
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) +
theme(text = element_text(size = 7.5),
axis.title = element_text(size = 7.5),
axis.text = element_text(size = 7.5))
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) +
theme(text = element_text(size = 10),
axis.title = element_text(size = 7.5),
axis.text = element_text(size = 7.5))
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) +
theme(text = element_text(size = 15),
axis.title = element_text(size = 7.5),
axis.text = element_text(size = 7.5))
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 3)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 10)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 7)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 5)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 4)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 4.5)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 5)
fviz_famd_var(resFAMD, "quali.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 5)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 5)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 6)
fviz_famd_var
fviz
visa_cleaned
data_x
data_x
visa_cleaned <- read.csv(file = "../Datasets/VisaPremier_cleaned.txt", row.names=1)
dim(visa_cleaned)
data_x <- visa_cleaned[, -dim(visa_cleaned)[2]]
data_y <- visa_cleaned[, dim(visa_cleaned)[2]]
dim(data_x)
length(data_y)
quali_names <- c("departem", "ptvente", "sexe", "sitfamil", "csp", "sexer", "codeqlt")
quali_sup_indexes <- c(1:length(names(visa_cleaned)))[names(visa_cleaned) %in% quali_names]
ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)[-ind_sup_indexes]
data_x
resPCA
resPCA$ind$coord
ind_sup_indexes
resPCA$ind$coord[ind_sup_indexes,]
resPCA$ind.sup$coord
var(data_x)
diag(var(data_x))
sort(diag(var(data_x)))
barplot(data_x[,"aveparfi"])
barplot(data_x[,"age"])
barplot(data_x[,"agemvt"])
barplot(data_x[,"moycredi"])
data_y
sum(data_y == 0) / length(data_y)
sum(data_y == 1) / length(data_y)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20))
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), pch=c(19,21))
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), pch=2)
c(1,2)[c(1,1,2,2)]
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(19, 21)[label_col])
c(19, 21)[label_col]
length(c(19, 21)[label_col])
length(label_col)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(19, 21)[label_col])
label_col
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = as.factor(c(19, 21)[label_col]))
visa_cleaned <- read.csv(file = "../Datasets/VisaPremier_cleaned.txt", row.names=1)
dim(visa_cleaned)
data_x <- visa_cleaned[, -dim(visa_cleaned)[2]]
data_y <- visa_cleaned[, dim(visa_cleaned)[2]]
dim(data_x)
length(data_y)
quali_names <- c("departem", "ptvente", "sexe", "sitfamil", "csp", "sexer", "codeqlt")
quali_sup_indexes <- c(1:length(names(visa_cleaned)))[names(visa_cleaned) %in% quali_names]
ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)[-ind_sup_indexes]
#####################
# AFDM
#####################
quali_todo <- c("departem", "ptvente", "sitfamil", "csp", "sexer", "codeqlt")
famd_data_x <- data_x
for(quali in quali_todo){
famd_data_x[quali] <- lapply(famd_data_x[quali], FUN=function(x){ paste(quali, x, sep="_") })
}
famd_data_x
resFAMD <- FAMD(famd_data_x, ind.sup = ind_sup_indexes)
resFAMD$quali.var
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(19, 21)[label_col])
length(data_x)
dim(data_x)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library("FactoMineR")
library("corrplot")
library("factoextra")
library("fields")
visa_cleaned <- read.csv(file = "../Datasets/VisaPremier_cleaned.txt", row.names=1)
dim(visa_cleaned)
data_x <- visa_cleaned[, -dim(visa_cleaned)[2]]
data_y <- visa_cleaned[, dim(visa_cleaned)[2]]
dim(data_x)
length(data_y)
quali_names <- c("departem", "ptvente", "sexe", "sitfamil", "csp", "sexer", "codeqlt")
quali_sup_indexes <- c(1:length(names(visa_cleaned)))[names(visa_cleaned) %in% quali_names]
ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)[-ind_sup_indexes]
label_col <- as.factor(data_y)
#####################
# AFDM
#####################
quali_todo <- c("departem", "ptvente", "sitfamil", "csp", "sexer", "codeqlt")
famd_data_x <- data_x
for(quali in quali_todo){
famd_data_x[quali] <- lapply(famd_data_x[quali], FUN=function(x){ paste(quali, x, sep="_") })
}
famd_data_x
resFAMD <- FAMD(famd_data_x, ind.sup = ind_sup_indexes)
resFAMD$quali.var
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(19, 21)[label_col])
a
a
a
visa_cleaned <- read.csv(file = "../Datasets/VisaPremier_cleaned.txt", row.names=1)
dim(visa_cleaned)
data_x <- visa_cleaned[, -dim(visa_cleaned)[2]]
data_y <- visa_cleaned[, dim(visa_cleaned)[2]]
dim(data_x)
length(data_y)
quali_names <- c("departem", "ptvente", "sexe", "sitfamil", "csp", "sexer", "codeqlt")
quali_sup_indexes <- c(1:length(names(visa_cleaned)))[names(visa_cleaned) %in% quali_names]
ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)[-ind_sup_indexes]
label_col2 <- as.factor(data_y)
#####################
# AFDM
#####################
quali_todo <- c("departem", "ptvente", "sitfamil", "csp", "sexer", "codeqlt")
famd_data_x <- data_x
for(quali in quali_todo){
famd_data_x[quali] <- lapply(famd_data_x[quali], FUN=function(x){ paste(quali, x, sep="_") })
}
famd_data_x
resFAMD <- FAMD(famd_data_x, ind.sup = ind_sup_indexes)
resFAMD$quali.var
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(19, 21)[label_col2])
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(19, 21)[label_col])
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = (c(19, 21)[label_col]))
shape_ind = (c(19, 21)[label_col])
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = )
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = shape_ind)
length(label_col)
length(label_col2)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(19,21))
length(shape_ind)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = label_col)
?fviz_famd_ind
shape_ind = (c(19, 21)[label_col2])
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = label_col2)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = label_col)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = 20)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = 21)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = 22)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = 23)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = 18)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = 17)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20), shape.ind = c(17,19))
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20))
dim(data_x)
data_x[,"codeqlt"]
boxplot(data_x[,"codeqlt"])
hist(data_x[,"codeqlt"])
hist(as.numeric(data_x[,"codeqlt"]))
hist(as.numeric(data_x[data_y == 0,"codeqlt"]))
layout(1:2)
hist(as.numeric(data_x[data_y == 0,"codeqlt"]))
hist(as.numeric(data_x[data_y == 1,"codeqlt"]))
length(data_x[data_y == 1,"codeqlt"])
length(data_x[data_y == 0,"codeqlt"])
boxplot(data_x[data_y == 0,"nbop"])
boxplot(data_x[data_y == 0,"nbop"], data_x[data_y == 0,"nbop"])
dev.off()
boxplot(data_x[data_y == 0,"nbop"], data_x[data_y == 0,"nbop"])
boxplot(data_x[data_y == 0,"nbop"], data_x[data_y == 1,"nbop"])
boxplot(data_x[data_y == 0,"nbop"], data_x[data_y == 1,"mteparmo"])
boxplot(data_x[data_y == 0,"nbop"], data_x[data_y == 1,"nbcb"])
boxplot(data_x[data_y == 0,"mteparmo"], data_x[data_y == 1,"mteparmo"])
boxplot(data_x[data_y == 0,"nbcb"], data_x[data_y == 1,"nbcb"])
boxplot(data_x[data_y == 0,"nbjdebit"], data_x[data_y == 1,"nbjdebit"])
readchar
getchar
for(variable in names(data_x)){
print(variable)
boxplot(data_x[data_y == 0,variable], data_x[data_y == 1,variable])
readline()
}
boxplot(data_x[data_y == 0,"sitfamil"], data_x[data_y == 1,"sitfamil"])
data_x[data_y == 0,"sitfamil"]
as.numeric(data_x[data_y == 0,"sitfamil"])
for(variable in names(data_x)){
print(variable)
boxplot(as.numeric(data_x)[data_y == 0,variable], as.numeric(data_x)[data_y == 1,variable])
readline()
}
for(variable in names(data_x)){
print(variable)
boxplot(as.numeric(data_x)[data_y == 0,variable], as.numeric(data_x)[data_y == 1,variable])
readline()
}
for(variable in names(data_x)){
print(variable)
boxplot(as.numeric(data_x[data_y == 0,variable]), as.numeric(data_x[data_y == 1,variable]))
readline()
}
for(variable in names(data_x)){
print(variable)
boxplot(as.numeric(data_x[data_y == 0,variable]), as.numeric(data_x[data_y == 1,variable]))
readline()
}
table(data_x[data_y == 0,"csp"])
table(data_x[data_y == 1,"csp"])
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(caret)
#################################################
# Functions
#################################################
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#####################
# Pre-processing
#####################
# Load dataset
visa <- read.csv("../Datasets/VisaPremier.txt", sep="\t", row.names=1)
dim(visa)
# Arange dataset to have label as the last column
temp_names <- c(names(visa)[names(visa) != "cartevpr"], "cartevpr")
visa <- cbind(visa[,names(visa) != "cartevpr"], visa[, names(visa) == "cartevpr"])
names(visa) <- temp_names
dim(visa)
# Features selection
to_remove <- c()
for(i in 1:dim(visa)[2]){
if(length(visa[,i]) == length(unique(visa[,i])) | length(unique(visa[,i])) == 1){
to_remove <- c(to_remove, names(visa)[i])
}
else{
print(names(visa)[i])
print(table(visa[,i]))
}
}
sum(data_x == "F.")
sum(visa_cleaned == "F.")
sum(visa == "F.")
for(variable in names(data_x)){
print(variable)
boxplot(as.numeric(data_x[data_y == 0,variable]), as.numeric(data_x[data_y == 1,variable]))
readline()
}
# Features selection
to_remove <- c()
for(i in 1:dim(visa)[2]){
if(length(visa[,i]) == length(unique(visa[,i])) | length(unique(visa[,i])) == 1){
to_remove <- c(to_remove, names(visa)[i])
}
else{
print(names(visa)[i])
if(length(table(visa[,i])) == 2)
print(table(visa[,i]))
}
}
which(visa[, "mtbon"] == 1)
which(visa[, "mtbon"] != 0)
which(visa[, "nbbon"] != 0)
visa[2,]
#####################
# Pre-processing
#####################
# Load dataset
visa <- read.csv("../Datasets/VisaPremier.txt", sep="\t", row.names=1)
dim(visa)
# Arange dataset to have label as the last column
temp_names <- c(names(visa)[names(visa) != "cartevpr"], "cartevpr")
visa <- cbind(visa[,names(visa) != "cartevpr"], visa[, names(visa) == "cartevpr"])
names(visa) <- temp_names
dim(visa)
# Features selection
to_remove <- c()
for(i in 1:dim(visa)[2]){
if(length(visa[,i]) == length(unique(visa[,i])) | length(unique(visa[,i])) == 1){
to_remove <- c(to_remove, names(visa)[i])
}
else{
print(names(visa)[i])
if(length(table(visa[,i])) == 2)
print(table(visa[,i]))
}
}
to_remove <- c(to_remove, "sexe", "cartevp", "nbbon", "mtbon") # These variables appears twice (with character values and binary values)
to_remove
visa_cleaned <- visa[, ! (names(visa) %in% to_remove)]
visa_cleaned <- visa[-2, ]
dim(visa_cleaned)
# Manage NA values
sum(visa_cleaned == ".")
names(visa_cleaned)[apply(visa_cleaned, MARGIN=2, FUN=function(x){ "." %in% x })]
visa_cleaned[visa_cleaned[,"departem"] == ".", "departem"] <- getmode(visa_cleaned[,'departem'])
visa_cleaned[visa_cleaned[,"codeqlt"] == ".", "codeqlt"] <- getmode(visa_cleaned[,'codeqlt'])
visa_cleaned[visa_cleaned[,"agemvt"] == ".", "agemvt"] <- median(as.numeric(visa_cleaned[,'agemvt']))
visa_cleaned[visa_cleaned[,"nbpaiecb"] == ".", "nbpaiecb"] <- median(as.numeric(visa_cleaned[,'nbpaiecb']))
sum(visa_cleaned == ".")
write.csv(file = "../Datasets/VisaPremier_cleaned.txt", visa_cleaned)
visa_cleaned <- read.csv(file = "../Datasets/VisaPremier_cleaned.txt", row.names=1)
dim(visa_cleaned)
data_x <- visa_cleaned[, -dim(visa_cleaned)[2]]
data_y <- visa_cleaned[, dim(visa_cleaned)[2]]
dim(data_x)
length(data_y)
quali_names <- c("departem", "ptvente", "sexe", "sitfamil", "csp", "sexer", "codeqlt")
quali_sup_indexes <- c(1:length(names(visa_cleaned)))[names(visa_cleaned) %in% quali_names]
ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)[-ind_sup_indexes]
label_col2 <- as.factor(data_y)
#####################
# AFDM
#####################
quali_todo <- c("departem", "ptvente", "sitfamil", "csp", "sexer", "codeqlt")
famd_data_x <- data_x
for(quali in quali_todo){
famd_data_x[quali] <- lapply(famd_data_x[quali], FUN=function(x){ paste(quali, x, sep="_") })
}
famd_data_x
resFAMD <- FAMD(famd_data_x, ind.sup = ind_sup_indexes)
famd_data_x
ind_sup_indexes
visa_cleaned <- read.csv(file = "../Datasets/VisaPremier_cleaned.txt", row.names=1)
dim(visa_cleaned)
data_x <- visa_cleaned[, -dim(visa_cleaned)[2]]
data_y <- visa_cleaned[, dim(visa_cleaned)[2]]
dim(data_x)
length(data_y)
quali_names <- c("departem", "ptvente", "sexe", "sitfamil", "csp", "sexer", "codeqlt")
quali_sup_indexes <- c(1:length(names(visa_cleaned)))[names(visa_cleaned) %in% quali_names]
#ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)[-ind_sup_indexes]
label_col2 <- as.factor(data_y)
#####################
# AFDM
#####################
quali_todo <- c("departem", "ptvente", "sitfamil", "csp", "sexer", "codeqlt")
famd_data_x <- data_x
for(quali in quali_todo){
famd_data_x[quali] <- lapply(famd_data_x[quali], FUN=function(x){ paste(quali, x, sep="_") })
}
famd_data_x
resFAMD <- FAMD(famd_data_x)
resFAMD$quali.var
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20))
label_col
#ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T, xlim=c(-7.5,20))
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T)
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 6)
names(data_x)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(caret)
#################################################
# Functions
#################################################
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#####################
# Pre-processing
#####################
# Load dataset
visa <- read.csv("../Datasets/VisaPremier.txt", sep="\t", row.names=1)
dim(visa)
# Arange dataset to have label as the last column
temp_names <- c(names(visa)[names(visa) != "cartevpr"], "cartevpr")
visa <- cbind(visa[,names(visa) != "cartevpr"], visa[, names(visa) == "cartevpr"])
names(visa) <- temp_names
dim(visa)
# Features selection
to_remove <- c()
for(i in 1:dim(visa)[2]){
if(length(visa[,i]) == length(unique(visa[,i])) | length(unique(visa[,i])) == 1){
to_remove <- c(to_remove, names(visa)[i])
}
else{
print(names(visa)[i])
if(length(table(visa[,i])) == 2)
print(table(visa[,i]))
}
}
to_remove <- c(to_remove, "sexe", "cartevp", "nbbon", "mtbon") # These variables appears twice (with character values and binary values)
to_remove
visa_cleaned <- visa[, ! (names(visa) %in% to_remove)]
visa_cleaned <- visa[-2, ]
dim(visa_cleaned)
to_remove
visa_cleaned <- visa[, ! (names(visa) %in% to_remove)]
visa_cleaned <- visa_cleaned[-2, ]
dim(visa_cleaned)
# Manage NA values
sum(visa_cleaned == ".")
names(visa_cleaned)[apply(visa_cleaned, MARGIN=2, FUN=function(x){ "." %in% x })]
visa_cleaned[visa_cleaned[,"departem"] == ".", "departem"] <- getmode(visa_cleaned[,'departem'])
visa_cleaned[visa_cleaned[,"codeqlt"] == ".", "codeqlt"] <- getmode(visa_cleaned[,'codeqlt'])
visa_cleaned[visa_cleaned[,"agemvt"] == ".", "agemvt"] <- median(as.numeric(visa_cleaned[,'agemvt']))
visa_cleaned[visa_cleaned[,"nbpaiecb"] == ".", "nbpaiecb"] <- median(as.numeric(visa_cleaned[,'nbpaiecb']))
sum(visa_cleaned == ".")
write.csv(file = "../Datasets/VisaPremier_cleaned.txt", visa_cleaned)
visa_cleaned <- read.csv(file = "../Datasets/VisaPremier_cleaned.txt", row.names=1)
dim(visa_cleaned)
data_x <- visa_cleaned[, -dim(visa_cleaned)[2]]
data_y <- visa_cleaned[, dim(visa_cleaned)[2]]
dim(data_x)
length(data_y)
quali_names <- c("departem", "ptvente", "sexe", "sitfamil", "csp", "sexer", "codeqlt")
quali_sup_indexes <- c(1:length(names(visa_cleaned)))[names(visa_cleaned) %in% quali_names]
#ind_sup_indexes <- c(1:length(rownames(visa_cleaned)))[rownames(visa_cleaned) == "442153"]
label_col <- as.factor(data_y)
#####################
# AFDM
#####################
quali_todo <- c("departem", "ptvente", "sitfamil", "csp", "sexer", "codeqlt")
famd_data_x <- data_x
for(quali in quali_todo){
famd_data_x[quali] <- lapply(famd_data_x[quali], FUN=function(x){ paste(quali, x, sep="_") })
}
famd_data_x
resFAMD <- FAMD(famd_data_x)
resFAMD$quali.var
fviz_famd_ind(resFAMD, label = "none", col.ind = label_col, addEllipses = T)
fviz_famd_var(resFAMD, "quanti.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 6)
names(data_x)
length(names(data_x))
fviz_famd_var(resFAMD, "quali.var", col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, labelsize = 5)
visa[2,]
for(variable in names(data_x)){
print(variable)
boxplot(as.numeric(data_x[data_y == 0,variable]), as.numeric(data_x[data_y == 1,variable]))
readline()
}
scale(data_x)
data_x
